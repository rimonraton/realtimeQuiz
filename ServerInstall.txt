Nginx, MySQL, PHP ||
===================>>>
Firewall ===>>>
** sudo ufw allow *port* || sudo ufw status **

MySQL ===>>>
sudo apt-get install mysql-server

Configuring MySQL ===>>> gyankosh
mysql -u root -p

CREATE DATABASE gyankosh DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
GRANT ALL ON gyankosh.* TO 'gyankosh'@'localhost' IDENTIFIED BY 'password';
||gyankosh=>gyankosh2021||
FLUSH PRIVILEGES;
EXIT;


PHP  INSTALL 7.4===>>>
sudo apt-get update
sudo apt -y install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo apt -y install php7.4

sudo apt install php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-soap php7.4-zip php7.4-intl -y

PHP REMOVE ===>>>
sudo apt-get purge php8.*
sudo apt-get autoclean
sudo apt-get autoremove


/etc/php/7.4/fpm/php.ini => cgi.fix_pathinfo=0

sudo systemctl restart php7.4-fpm

Configure Nginx ===>>>

sudo nano /etc/nginx/sites-available/default

sudo nginx -t
sudo systemctl reload nginx

sudo nano /var/www/html/info.php => <?php phpinfo();

PHP MYADMIN ===>>>
sudo apt-get install phpmyadmin
sudo ln -s /usr/share/phpmyadmin /var/www/html   ##SymbolicLink
sudo systemctl restart php7.4-fpm

SSL ===>>>
sudo certbot certonly --webroot --webroot-path=/var/www/html/gyankosh -d gyankosh.org -d www.gyankosh.org



Laravel Application Setuup ===>>>
sudo mkdir -p /var/www/html/appName
sudo chown UserName:UserName /var/www/html/gyankosh

git clone ProjectLink .
sudo mv composer.phar /usr/local/bin/ then alias composer='/usr/local/bin/composer.phar'

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"


composer install
*php artisan clear-compiled
*php artisan optimize

sudo nano /var/www/html/appName/.env
php artisan migrate


Configure NGINX ===>>>
sudo chgrp -R www-data storage bootstrap/cache
sudo chmod -R ug+rwx storage bootstrap/cache
sudo chown -R www-data.www-data /var/www/html/quizapp/storage
sudo chown -R www-data.www-data /var/www/html/quizapp/bootstrap/cache

sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/example.com
sudo nano /etc/nginx/sites-available/example.com

SymbolicLink
sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/
sudo systemctl reload nginx

GENERATE SSL ===>>>
sudo certbot certonly --webroot --webroot-path=/var/www/html/appName -d example.com -d www.example.com
sudo nginx -t
sudo systemctl restart nginx


NGINX SITES-AVAILABLE CONFIG ===>>>

    map $http_upgrade $type {
      default "web";
      websocket "ws";
      websockets "wss";
    }

    server {
        listen 80;
        listen [::]:80;

        root /var/www/html/gyankosh/public;
        index index.php;

        server_name gyankosh.org www.gyankosh.org;
        return 301 https://$server_name$request_uri;

        location / {
            try_files /nonexistent @$type;
        }

        location @web  {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location @ws {
            proxy_pass             http://127.0.0.1:6001;
            proxy_set_header Host  $host;
            proxy_read_timeout     60;
            proxy_connect_timeout  60;
            proxy_redirect         off;

            # Allow the use of websockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        }

        location ~ /\.ht {
            deny all;
        }
    }

  server {

       listen 443 ssl;
       listen [::]:443 ssl;

       root /var/www/html/gyankosh/public;
       index index.php;

       server_name gyankosh.org www.gyankosh.org;

       ssl_certificate /etc/letsencrypt/live/gyankosh.org/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/gyankosh.org/privkey.pem;
       ssl_session_cache shared:SSL:10m;
       ssl_session_timeout 10m;
       ssl_protocols TLSv1.2;
       ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
       ssl_prefer_server_ciphers on;
       ssl_dhparam /etc/nginx/ssl/dhp-4096.pem;

       location / {
           try_files /nonexistent @$type;
       }

       location @web  {
           try_files $uri $uri/ /index.php?$query_string;
       }

       location @ws {
           proxy_pass             http://127.0.0.1:6001;
           proxy_set_header Host  $host;
           proxy_read_timeout     60;
           proxy_connect_timeout  60;
           proxy_redirect         off;

           # Allow the use of websockets
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
       }

       location ~ \.php$ {
           include snippets/fastcgi-php.conf;
           fastcgi_pass unix:/run/php/php7.4-fpm.sock;
       }

       location ~ /\.ht {
           deny all;
       }
  }
sudo certbot certonly --webroot --webroot-path=/var/www/html/gyankosh -d gyankosh.org -d www.gyankosh.org


rsync -rP raton@35.232.113.230:/var/bigbluebutton/recording/raw/ /var/bigbluebutton/recording/raw/

tar -czvf archive.tar.gz raw
tar -xzvf archive.tar.gz


cat ~/.ssh/id_rsa.pub | ssh raton@35.232.113.230 "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

rsync -rP raton@35.232.113.230:/var/bigbluebutton/published/ /var/bigbluebutton/published/


cat ~/.ssh/id_rsa.pub | ssh quizapp@194.233.73.111 "mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys && chmod -R go= ~/.ssh && cat >> ~/.ssh/authorized_keys"